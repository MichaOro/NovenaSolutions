---
import "../styles/global.css";
import ThemeToggle from "../components/ThemeToggle.tsx";
import SiteFooter from "../components/SiteFooter.astro";
import { NAV, HOME_ALIAS } from "../config/nav";
import { Home } from "lucide-react";

interface Props { contentWidth?: string }
const { contentWidth = "max-w-6xl" } = Astro.props as Props;

const rawPath = Astro.url.pathname.replace(/\/+$/, "") || "/";
const currentPath = rawPath === "/" ? HOME_ALIAS : rawPath;
const is = (p: string) => p === currentPath;
---

<html lang="de" class="h-full">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script is:inline>
      const t = localStorage.getItem("theme");
      const hasChoice = t === "light" || t === "dark";
      const useDark = hasChoice ? t === "dark" : false; // default: light
      document.documentElement.classList.toggle("dark", useDark);
    </script>
  </head>

  <body class="min-h-dvh flex flex-col bg-[var(--sand)] dark:bg-[var(--cyprus)]
               text-[var(--cyprus)] dark:text-[var(--sand)] transition-colors duration-300">

    <!-- LIGHT BG -->
    <div aria-hidden="true" class="fixed inset-0 -z-10 block dark:hidden">
      <svg width="100%" height="100%" preserveAspectRatio="none">
        <defs>
          <linearGradient id="g-light" x1="0" y1="0" x2="0" y2="1">
            <stop offset="-0.05" style="stop-color:var(--light-1)"/>
            <stop offset="1.05"  style="stop-color:var(--light-7)"/>
          </linearGradient>
        </defs>
        <rect x="0" y="0" width="100%" height="100%" fill="url(#g-light)" />
      </svg>
    </div>

    <!-- DARK BG -->
    <div aria-hidden="true" class="fixed inset-0 -z-10 hidden dark:block">
      <svg width="100%" height="100%" preserveAspectRatio="none">
        <defs>
          <linearGradient id="g-dark" x1="0" y1="0" x2="0" y2="1">
            <stop offset="-0.05" style="stop-color:var(--dark-1)"/>
            <stop offset="1.05"  style="stop-color:var(--dark-7)"/>
          </linearGradient>
        </defs>
        <rect x="0" y="0" width="100%" height="100%" fill="url(#g-dark)" />
      </svg>
    </div>

    <!-- Noise -->
    <div class="pointer-events-none fixed inset-0 block dark:hidden opacity-[0.04]
                bg-[radial-gradient(circle,rgba(0,0,0,0.25)_0.5px,transparent_0.6px)]
                [background-size:3px_3px]"></div>
    <div class="pointer-events-none fixed inset-0 hidden dark:block opacity-[0.03]
                bg-[radial-gradient(circle,rgba(255,255,255,0.25)_0.5px,transparent_0.6px)]
                [background-size:3px_3px]"></div>

    <!-- HEADER -->
    <header class={`relative mx-auto ${contentWidth} px-8 pt-10 pb-2`}></header>

    <!-- CONTENT -->
    <main class="flex-1 w-full">
      <section class={`mx-auto ${contentWidth} px-8`} style="--thumb:1.5rem; --panel-gutter:1rem;">
        <div class="mt-3 mb-2 grid grid-cols-[1fr_auto] items-center pr-[var(--thumb)]">
          <nav class="pl-[var(--thumb)]">
            <div class="flex items-center text-sm">
              {NAV.map((i, idx) => (
                <>
                  <a
                    href={i.href}
                    aria-current={is(i.href) ? "page" : undefined}
                    aria-label={i.href === HOME_ALIAS ? "Startseite" : undefined}
                    class="group relative flex items-center gap-1 px-1.5 py-0.5 rounded-md transition-colors
                           text-neutral-700 hover:text-neutral-900
                           dark:text-white/70 dark:hover:text-white
                           aria-[current=page]:text-emerald-600 dark:aria-[current=page]:text-emerald-300
                           after:absolute after:left-1.5 after:right-1.5 after:-bottom-0.5 after:h-[2px] after:rounded-full
                           aria-[current=page]:after:bg-emerald-500 dark:aria-[current=page]:after:bg-emerald-300"
                  >
                    {i.href === HOME_ALIAS ? (
                      <Home class="w-4 h-4 shrink-0 text-[var(--cyprus)] dark:text-[var(--sand)]" aria-hidden="true" />
                    ) : (
                      i.label
                    )}
                  </a>
                  {idx < NAV.length - 1 && (
                    <span class="px-2 select-none text-neutral-400 dark:text-white/30">/</span>
                  )}
                </>
              ))}
            </div>
          </nav>

          <div class="justify-self-end text-xs md:text-sm">
            <ThemeToggle client:load />
          </div>
        </div>

        <div class="px-[var(--panel-gutter)]">
          <slot />
        </div>
      </section>
    </main>

    <!-- FOOTER -->
    <footer class="mt-auto">
      <SiteFooter />
    </footer>
  </body>
</html>
